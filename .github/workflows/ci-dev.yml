name: CI-dev

on:
  push:
    branches-ignore:
      - master
  pull-request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          tags: haxe/lib.haxe.org:${{ github.sha }}
          outputs: type=docker,dest=/tmp/haxelib-server-image.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: haxelib-server-image
          path: /tmp/haxelib-server-image.tar
  push:
    needs: build
    if: success() && ( github.repository == 'HaxeFoundation/haxelib' )
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: haxelib-server-image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/haxelib-server-image.tar
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: haxeci
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push image
        run: docker push haxe/lib.haxe.org:${{ github.sha }}
  test:
    needs: push
    runs-on: ubuntu-latest
    container: haxe/haxelib_devcontainer_workspace:20210928094749
    services:
      haxelib:
        image: haxe/lib.haxe.org:${{ github.sha }}
        ports:
          - "80:80"
        env:
          HAXELIB_DB_HOST: mysql
          HAXELIB_DB_PORT: 3306
          HAXELIB_DB_USER: dbUser
          HAXELIB_DB_PASS: dbPass
          HAXELIB_DB_NAME: haxelib
      mysql:
        image: mariadb:10.5
        ports:
          - "3306:3306"
        env:
          TZ: UTC
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: haxelib
          MYSQL_USER: dbUser
          MYSQL_PASSWORD: dbPass
    env:
      HAXELIB_SERVER: haxelib
      HAXELIB_SERVER_PORT: 80
      HAXELIB_DB_HOST: mysql
      HAXELIB_DB_PORT: 3306
      HAXELIB_DB_USER: dbUser
      HAXELIB_DB_PASS: dbPass
      HAXELIB_DB_NAME: haxelib
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: echo "Hello from PR"
      - run: neko run.n setup haxelib_global
      - run: haxe libs.hxml
      - run: haxe ci.hxml
      - name: Make sure the server is up
        run: curl -sSL "http://${HAXELIB_SERVER}:${HAXELIB_SERVER_PORT}" > /dev/null
      - run: neko bin/ci.n
  deploy:
    if: github.event_name != 'pull_request'
    needs: test
    concurrency: deploy
    runs-on: ubuntu-latest
    container: haxe/haxelib_devcontainer_workspace:20210928094749
    env:
      AWS_DEFAULT_REGION: eu-west-1
      TF_INPUT: 0
      TF_IN_AUTOMATION: 1
    steps:
      - uses: actions/checkout@v2
      - run: terraform init
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - run: terraform apply -auto-approve
        working-directory: terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_HAXELIB_DB_PASS: ${{ secrets.TF_VAR_HAXELIB_DB_PASS }}
          TF_VAR_HAXELIB_SERVER_IMAGE_DEVELOPMENT: haxe/lib.haxe.org:${{ github.sha }}

// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
(function () { "use strict";
var StringTools = function() { };
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var highlighter_Highlighter = function() { };
highlighter_Highlighter.main = function() {
	highlighter_Highlighter.highlight();
};
highlighter_Highlighter.highlight = function(container) {
	if(container == null) {
		container = window.document.body;
	}
	var _g = 0;
	var _g1 = container.getElementsByTagName("code");
	while(_g < _g1.length) {
		var el = _g1[_g];
		++_g;
		if(el.classList.contains("prettyprint")) {
			if(!el.classList.contains("highlighted")) {
				if(el.classList.contains("haxe") || el.classList.contains("js") || el.classList.contains("javascript")) {
					el.innerHTML = highlighter_Highlighter.syntaxHighlightHaxe(el.innerHTML);
					el.className += " highlighted";
				} else if(el.classList.contains("hxml")) {
					el.innerHTML = highlighter_Highlighter.syntaxHighlightHXML(el.innerHTML);
					el.className += " highlighted";
				}
			}
		}
	}
};
highlighter_Highlighter.syntaxHighlightHaxe = function(code) {
	var html = code;
	var kwds_r = new RegExp("\\b(" + ["abstract","trace","break","case","cast","class","continue","default","do","dynamic","else","elseif","enum","extends","extern","for","function","if","implements","import","in","inline","interface","macro","new","override","package","private","public","return","static","switch","throw","try","typedef","untyped","using","var","while","as"].join("|") + ")\\b","g".split("u").join(""));
	var vals_r = new RegExp("\\b(" + ["null","true","false","this"].join("|") + ")\\b","g".split("u").join(""));
	var types_r = new RegExp("\\b([A-Z][a-zA-Z0-9_]*)\\b","g".split("u").join(""));
	var regexp_r = new RegExp("(~/(.+?)/[igm])","g".split("u").join(""));
	html = StringTools.replace(code,"\t","  ");
	html = html.replace(kwds_r,"<span class=kwd>$1</span>");
	html = html.replace(vals_r,"<span class=val>$1</span>");
	html = html.replace(types_r,"<span class=type>$1</span>");
	html = html.replace(regexp_r,"<span class=ereg>$1</span>");
	var _this_r = new RegExp("((\"|')[^\"']*\\2)","g".split("u").join(""));
	html = html.replace(_this_r,"<span class=str>$1</span>");
	var _this_r1 = new RegExp("(//.+?)(\n|$)","g".split("u").join(""));
	html = html.replace(_this_r1,"<span class=cmt>$1</span>$2");
	var _this_r2 = new RegExp("(/\\*\\*?(.|\n)+?\\*?\\*/)","g".split("u").join(""));
	html = html.replace(_this_r2,"<span class=cmt>$1</span>");
	return html;
};
highlighter_Highlighter.syntaxHighlightHXML = function(code) {
	var html = code;
	var _this_r = new RegExp("\\b(haxe)\\b","g".split("u").join(""));
	html = code.replace(_this_r,"<span class=kwd>$1</span>");
	var _this_r1 = new RegExp("((\"|')[^\"']*\\2)","g".split("u").join(""));
	html = html.replace(_this_r1,"<span class=str>$1</span>");
	var _this_r2 = new RegExp("(--?.+?)(\\s)","g".split("u").join(""));
	html = html.replace(_this_r2,"<span class=val>$1</span>$2");
	var _this_r3 = new RegExp("(#.+?)(\n|$)","g".split("u").join(""));
	html = html.replace(_this_r3,"<span class=cmt>$1</span>$2");
	return html;
};
highlighter_Highlighter.main();
})();
